name: Build PR

on:
  pull_request:
    branches: ["main"]
    types: [ready_for_review, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.event.pull_request.draft == false
    name: Build PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          # note: none of these work, but are supposed to work as per docs (TODO)
          fetch-tags: true
          filter: tree:0
          fetch-depth: 0 # (no history limit)

      - name: Fetch tags
        run: git fetch --tags --depth 1

      # - name: Determine epoch time
      #   id: epoch
      #   run: echo "value=`date +%s`" >> $GITHUB_OUTPUT

      - name: Sync build cache
        uses: actions/cache@v4.2.0
        with:
          # key: ${{ github.ref }}-${{ steps.epoch.outputs.value }}
          # key: ${{ github.ref }}-${{ hashFiles('build/a','build/b') }}
          key: ${{ github.ref }}-${{ hashFiles('build/**/*') }}
          restore-keys: |
            refs/pull/1
            refs/pull
          path: |
            build

      - name: Build
        run: |
          echo "ref =" ${{ github.ref }}

          # echo "### tree begin"
          # tree
          # echo "### tree end"
          # mkdir -p build && touch build/a
          # echo "### old build/a begin"
          # cat build/a
          # echo "### old build/a end"
          # git fetch --unshallow
          # git log --oneline > build/a
          # echo "### written build/a begin"
          # cat build/a
          # echo "### written build/a end"

          echo "## start: from cache"
          tree build
          echo "## end: from cache"
          sum=`md5sum a | awk '{print $2}'`
          echo sum=$sum
          mkdir -p build/$sum
          echo $sum > build/$sum/$sum
          echo "## start: to cache"
          tree build
          echo "## end: to cache"
          echo "Build success"
